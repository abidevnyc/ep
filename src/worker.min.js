import{connect}from"cloudflare:sockets";let Pswd="trojan",proxyIPs=["ts.hpc.tw"],cn_hostnames=[""],CDNIP="www.visa.com.sg",IP1="www.visa.com",IP2="cis.visa.com",IP3="africa.visa.com",IP4="www.visa.com.sg",IP5="www.visaeurope.at",IP6="www.visa.com.mt",IP7="qa.visamiddleeast.com",IP8="usa.visa.com",IP9="myanmar.visa.com",IP10="www.visa.com.tw",IP11="www.visaeurope.ch",IP12="www.visa.com.br",IP13="www.visasoutheasteurope.com",PT1="80",PT2="8080",PT3="8880",PT4="2052",PT5="2082",PT6="2086",PT7="2095",PT8="443",PT9="8443",PT10="2053",PT11="2083",PT12="2087",PT13="2096",sha224Password,proxyIP=proxyIPs[Math.floor(Math.random()*proxyIPs.length)],proxyPort=proxyIP.includes(":")?proxyIP.split(":")[1]:"443",worker_default={async fetch(e,t,r){try{var s,a,o,n,i=t.proxyip,d=(i?i.includes("]:")?(s=i.lastIndexOf(":"),proxyPort=i.slice(s+1),proxyIP=i.slice(0,s)):i.includes("]:")||i.includes("]")?(proxyPort="443",proxyIP=i):[proxyIP,proxyPort="443"]=i.split(":"):proxyIP.includes("]:")?(a=proxyIP.lastIndexOf(":"),proxyPort=proxyIP.slice(a+1),proxyIP=proxyIP.slice(0,a)):proxyIP.includes("]:")||proxyIP.includes("]")?proxyPort="443":[proxyIP,proxyPort="443"]=proxyIP.split(":"),console.log("ProxyIP:",proxyIP),console.log("ProxyPort:",proxyPort),CDNIP=t.cdnip||CDNIP,Pswd=t.pswd||Pswd,IP1=t.ip1||IP1,IP2=t.ip2||IP2,IP3=t.ip3||IP3,IP4=t.ip4||IP4,IP5=t.ip5||IP5,IP6=t.ip6||IP6,IP7=t.ip7||IP7,IP8=t.ip8||IP8,IP9=t.ip9||IP9,IP10=t.ip10||IP10,IP11=t.ip11||IP11,IP12=t.ip12||IP12,IP13=t.ip13||IP13,PT1=t.pt1||PT1,PT2=t.pt2||PT2,PT3=t.pt3||PT3,PT4=t.pt4||PT4,PT5=t.pt5||PT5,PT6=t.pt6||PT6,PT7=t.pt7||PT7,PT8=t.pt8||PT8,PT9=t.pt9||PT9,PT10=t.pt10||PT10,PT11=t.pt11||PT11,PT12=t.pt12||PT12,PT13=t.pt13||PT13,sha224Password=sha256.sha224(Pswd),e.headers.get("Upgrade")),l=new URL(e.url);if(d&&"websocket"===d)return l.pathname.includes("/pyip=")&&isValidIP(o=l.pathname.split("=")[1])&&((proxyIP=o).includes("]:")?(n=proxyIP.lastIndexOf(":"),proxyPort=proxyIP.slice(n+1),proxyIP=proxyIP.slice(0,n)):proxyIP.includes("]:")||proxyIP.includes("]")?proxyPort="443":[proxyIP,proxyPort="443"]=proxyIP.split(":")),await trojanOverWSHandler(e);var p,h,c,u,_,$=new URL(e.url);switch($.pathname){case"/"+Pswd:var P=gettrojanConfig(Pswd,e.headers.get("Host"));return new Response(""+P,{status:200,headers:{"Content-Type":"text/html;charset=utf-8"}});case`/${Pswd}/ty`:var T=gettyConfig(Pswd,e.headers.get("Host"));return new Response(""+T,{status:200,headers:{"Content-Type":"text/plain;charset=utf-8"}});case`/${Pswd}/cl`:var y=getclConfig(Pswd,e.headers.get("Host"));return new Response(""+y,{status:200,headers:{"Content-Type":"text/plain;charset=utf-8"}});case`/${Pswd}/sb`:var w=getsbConfig(Pswd,e.headers.get("Host"));return new Response(""+w,{status:200,headers:{"Content-Type":"application/json;charset=utf-8"}});case`/${Pswd}/pty`:var f=getptyConfig(Pswd,e.headers.get("Host"));return new Response(""+f,{status:200,headers:{"Content-Type":"text/plain;charset=utf-8"}});case`/${Pswd}/pcl`:var b=getpclConfig(Pswd,e.headers.get("Host"));return new Response(""+b,{status:200,headers:{"Content-Type":"text/plain;charset=utf-8"}});case`/${Pswd}/psb`:var I=getpsbConfig(Pswd,e.headers.get("Host"));return new Response(""+I,{status:200,headers:{"Content-Type":"application/json;charset=utf-8"}});default:return cn_hostnames.includes("")?new Response(JSON.stringify(e.cf,null,4),{status:200,headers:{"Content-Type":"application/json;charset=utf-8"}}):(p=cn_hostnames[Math.floor(Math.random()*cn_hostnames.length)],(h=new Headers(e.headers)).set("cf-connecting-ip","1.2.3.4"),h.set("x-forwarded-for","1.2.3.4"),h.set("x-real-ip","1.2.3.4"),h.set("referer","https://www.google.com/search?q=edtunnel"),c="https://"+p+$.pathname+$.search,u=new Request(c,{method:e.method,headers:h,body:e.body,redirect:"manual"}),_=await fetch(u,{redirect:"manual"}),[301,302].includes(_.status)?new Response(`Redirects to ${p} are not allowed.`,{status:403,statusText:"Forbidden"}):_)}}catch(e){return new Response(e.toString())}}};function isValidIP(e){return/^[\s\S]*$/.test(e)}async function trojanOverWSHandler(e){var t=new WebSocketPair;let[r,n]=Object.values(t),i=(n.accept(),""),d="",l=(e,t)=>{console.log(`[${i}:${d}] `+e,t||"")};t=e.headers.get("sec-websocket-protocol")||"",e=makeReadableWebSocketStream(n,t,l);let p={value:null};return e.pipeTo(new WritableStream({async write(e,t){if(p.value)await(r=p.value.writable.getWriter()).write(e),r.releaseLock();else{var{hasError:r,message:e,portRemote:s=443,addressRemote:a="",rawClientData:o}=await parseTrojanHeader(e);if(i=a,d=`${s}--${Math.random()} tcp`,r)throw new Error(e);handleTCPOutBound(p,a,s,o,n,l)}},close(){l("readableWebSocketStream is closed")},abort(e){l("readableWebSocketStream is aborted",JSON.stringify(e))}})).catch(e=>{l("readableWebSocketStream pipeTo error",e)}),new Response(null,{status:101,webSocket:r})}async function parseTrojanHeader(e){if(e.byteLength<56)return{hasError:!0,message:"invalid data"};if(13!==new Uint8Array(e.slice(56,57))[0]||10!==new Uint8Array(e.slice(57,58))[0])return{hasError:!0,message:"invalid header format (missing CR LF)"};if((new TextDecoder).decode(e.slice(0,56))!==sha224Password)return{hasError:!0,message:"invalid password"};var t=e.slice(58);if(t.byteLength<6)return{hasError:!0,message:"invalid SOCKS5 request data"};e=new DataView(t);if(1!==e.getUint8(0))return{hasError:!0,message:"unsupported command, only TCP (CONNECT) is allowed"};var r,s=e.getUint8(1);let a=0,o=2,n="";switch(s){case 1:a=4,n=new Uint8Array(t.slice(o,o+a)).join(".");break;case 3:a=new Uint8Array(t.slice(o,o+1))[0],o+=1,n=(new TextDecoder).decode(t.slice(o,o+a));break;case 4:a=16;var i=new DataView(t.slice(o,o+a)),d=[];for(let e=0;e<8;e++)d.push(i.getUint16(2*e).toString(16));n=d.join(":");break;default:return{hasError:!0,message:"invalid addressType is "+s}}return n?(e=o+a,r=t.slice(e,e+2),r=new DataView(r).getUint16(0),{hasError:!1,addressRemote:n,portRemote:r,rawClientData:t.slice(e+4)}):{hasError:!0,message:"address is empty, addressType is "+s}}async function handleTCPOutBound(s,t,r,a,o,n){async function i(e,t){var r=connect({hostname:e,port:t}),e=(s.value=r,n(`connected to ${e}:`+t),r.writable.getWriter());return await e.write(a),e.releaseLock(),r}remoteSocketToWS(await i(t=/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(t)?""+atob("d3d3Lg==")+t+atob("LnNzbGlwLmlv"):t,r),o,async function(){var e=await i(proxyIP||t,proxyPort||r);e.closed.catch(e=>{console.log("retry tcpSocket closed error",e)}).finally(()=>{safeCloseWebSocket(o)}),remoteSocketToWS(e,o,null,n)},n)}function makeReadableWebSocketStream(s,a,o){let n=!1;return new ReadableStream({start(t){s.addEventListener("message",e=>{n||(e=e.data,t.enqueue(e))}),s.addEventListener("close",()=>{safeCloseWebSocket(s),n||t.close()}),s.addEventListener("error",e=>{o("webSocketServer error"),t.error(e)});var{earlyData:e,error:r}=base64ToArrayBuffer(a);r?t.error(r):e&&t.enqueue(e)},pull(e){},cancel(e){n||(o("readableStream was canceled, due to "+e),n=!0,safeCloseWebSocket(s))}})}async function remoteSocketToWS(e,r,t,s){let a=!1;await e.readable.pipeTo(new WritableStream({start(){},async write(e,t){a=!0,r.readyState!==WS_READY_STATE_OPEN&&t.error("webSocket connection is not open"),r.send(e)},close(){s("remoteSocket.readable is closed, hasIncomingData: "+a)},abort(e){console.error("remoteSocket.readable abort",e)}})).catch(e=>{console.error("remoteSocketToWS error:",e.stack||e),safeCloseWebSocket(r)}),!1===a&&t&&(s("retry"),t())}function base64ToArrayBuffer(e){if(!e)return{error:null};try{e=e.replace(/-/g,"+").replace(/_/g,"/");var t=atob(e);return{earlyData:Uint8Array.from(t,e=>e.charCodeAt(0)).buffer,error:null}}catch(e){return{error:e}}}let WS_READY_STATE_OPEN=1,WS_READY_STATE_CLOSING=2;function safeCloseWebSocket(e){try{e.readyState!==WS_READY_STATE_OPEN&&e.readyState!==WS_READY_STATE_CLOSING||e.close()}catch(e){console.error("safeCloseWebSocket error",e)}}function gettrojanConfig(e,t){var r=atob(btoa(`trojan://${e}@${CDNIP}:8880?security=none&type=ws&host=${t}&path=%2F%3Fed%3D2560#`+t)),s=atob(btoa(`trojan://${e}@${CDNIP}:8443?security=tls&type=ws&host=${t}&sni=${t}&fp=random&path=%2F%3Fed%3D2560#`+t)),a=`https://${t}/${e}/ty`,o=`https://${t}/${e}/cl`,n=`https://${t}/${e}/sb`,i=`https://${t}/${e}/pty`,d=`https://${t}/${e}/pcl`,l=`https://${t}/${e}/psb`,p=(`甬哥博客地址：https://ygkkk.blogspot.com
甬哥YouTube频道：https://www.youtube.com/@ygkkk
甬哥TG电报群组：https://t.me/ygkkktg
甬哥TG电报频道：https://t.me/ygkkktgpd

ProxyIP全局运行中：`+proxyIP).replace(/\n/g,"<br>"),h=`
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<style>
.limited-width {
    max-width: 200px;
    overflow: auto;
    word-wrap: break-word;
}
</style>
</head>
<script>
function copyToClipboard(text) {
  const input = document.createElement('textarea');
  input.style.position = 'fixed';
  input.style.opacity = 0;
  input.value = text;
  document.body.appendChild(input);
  input.select();
  document.execCommand('Copy');
  document.body.removeChild(input);
  alert('已复制到剪贴板');
}
</script>
`;return t.includes("workers.dev")?`
<br>
<br>
${h}
<body>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1>Cloudflare-workers/pages-trojan代理脚本 V24.10.18</h1>
			<hr>
            <p>${p}</p>
            <hr>
			<hr>
			<hr>
            <br>
            <br>
            <h3>1：CF-workers-trojan+ws节点</h3>
			<table class="table">
				<thead>
					<tr>
						<th>节点特色：</th>
						<th>单节点链接如下：</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td class="limited-width">关闭了TLS加密，无视域名阻断</td>
						<td class="limited-width">${r}</td>
						<td><button class="btn btn-primary" onclick="copyToClipboard('${r}')">点击复制链接</button></td>
					</tr>
				</tbody>
			</table>
            <h5>客户端参数如下：</h5>
            <ul>
                <li>客户端地址(address)：自定义的域名 或者 优选域名 或者 优选IP 或者 反代IP</li>
                <li>端口(port)：7个http端口可任意选择(80、8080、8880、2052、2082、2086、2095)，或反代IP对应端口</li>
                <li>密码(password)：${e}</li>
                <li>传输协议(network)：ws 或者 websocket</li>
                <li>伪装域名(host)：${t}</li>
                <li>路径(path)：/?ed=2560</li>
                <li>传输安全(TLS)：关闭</li>
            </ul>
            <hr>
			<hr>
			<hr>
            <br>
            <br>
            <h3>2：CF-workers-trojan+ws+tls</h3>
			<table class="table">
				<thead>
					<tr>
						<th>节点特色：</th>
						<th>单节点链接如下：</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td class="limited-width">启用了TLS加密，<br>如果客户端支持分片(Fragment)功能，建议开启，防止域名阻断</td>
						<td class="limited-width">${s}</td>	
						<td><button class="btn btn-primary" onclick="copyToClipboard('${s}')">点击复制链接</button></td>
					</tr>
				</tbody>
			</table>
            <h5>客户端参数如下：</h5>
            <ul>
                <li>客户端地址(address)：自定义的域名 或者 优选域名 或者 优选IP 或者 反代IP</li>
                <li>端口(port)：6个https端口可任意选择(443、8443、2053、2083、2087、2096)，或反代IP对应端口</li>
                <li>密码(password)：${e}</li>
                <li>传输协议(network)：ws 或者 websocket</li>
                <li>伪装域名(host)：${t}</li>
                <li>路径(path)：/?ed=2560</li>
                <li>传输安全(TLS)：开启</li>
                <li>跳过证书验证(allowlnsecure)：false</li>
			</ul>
			<hr>
			<hr>
			<hr>
			<br>	
			<br>
			<h3>3：聚合通用、Clash-meta、Sing-box订阅链接如下：</h3>
			<hr>
			<p>注意：<br>1、默认每个订阅链接包含TLS+非TLS共13个端口节点 (Clash节点仅6个TLS节点)<br>2、当前workers域名作为订阅链接，需通过代理进行订阅更新<br>3、如使用的客户端不支持分片功能，则TLS节点不可用</p>	
                        <hr>
			<table class="table">
					<thead>
						<tr>
							<th>聚合通用订阅链接：</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td class="limited-width">${a}</td>	
							<td><button class="btn btn-primary" onclick="copyToClipboard('${a}')">点击复制链接</button></td>
						</tr>
					</tbody>
				</table>	

				<table class="table">
						<thead>
							<tr>
								<th>Clash-meta订阅链接：</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td class="limited-width">${o}</td>	
								<td><button class="btn btn-primary" onclick="copyToClipboard('${o}')">点击复制链接</button></td>
							</tr>
						</tbody>
					</table>

					<table class="table">
					<thead>
						<tr>
							<th>Sing-box订阅链接：</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td class="limited-width">${n}</td>	
							<td><button class="btn btn-primary" onclick="copyToClipboard('${n}')">点击复制链接</button></td>
						</tr>
					</tbody>
				</table>
				<br>
				<br>
        </div>
    </div>
</div>
</body>
`:`
<br>
<br>
${h}
<body>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h1>Cloudflare-workers/pages-trojan代理脚本 V24.10.18</h1>
			<hr>
            <p>${p}</p>
            <hr>
			<hr>
			<hr>
            <br>
            <br>
            <h3>1：CF-pages/workers/自定义域-trojan+ws+tls节点</h3>
			<table class="table">
				<thead>
					<tr>
						<th>节点特色：</th>
						<th>单节点链接如下：</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td class="limited-width">启用了TLS加密，<br>如果客户端支持分片(Fragment)功能，可开启，防止域名阻断</td>
						<td class="limited-width">${s}</td>
						<td><button class="btn btn-primary" onclick="copyToClipboard('${s}')">点击复制链接</button></td>
					</tr>
				</tbody>
			</table>
            <h5>客户端参数如下：</h5>
            <ul>
                <li>客户端地址(address)：自定义的域名 或者 优选域名 或者 优选IP 或者 反代IP</li>
                <li>端口(port)：6个https端口可任意选择(443、8443、2053、2083、2087、2096)，或反代IP对应端口</li>
                <li>密码(password)：${e}</li>
                <li>传输协议(network)：ws 或者 websocket</li>
                <li>伪装域名(host)：${t}</li>
                <li>路径(path)：/?ed=2560</li>
                <li>传输安全(TLS)：开启</li>
                <li>跳过证书验证(allowlnsecure)：false</li>
			</ul>
            <hr>
			<hr>
			<hr>
            <br>
            <br>
			<h3>2：聚合通用、Clash-meta、Sing-box订阅链接如下：</h3>
			<hr>
			<p>注意：以下订阅链接仅6个TLS端口节点</p>
			<hr>
			<table class="table">
					<thead>
						<tr>
							<th>聚合通用订阅链接：</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td class="limited-width">${i}</td>	
							<td><button class="btn btn-primary" onclick="copyToClipboard('${i}')">点击复制链接</button></td>
						</tr>
					</tbody>
				</table>	

				<table class="table">
						<thead>
							<tr>
								<th>Clash-meta订阅链接：</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td class="limited-width">${d}</td>	
								<td><button class="btn btn-primary" onclick="copyToClipboard('${d}')">点击复制链接</button></td>
							</tr>
						</tbody>
					</table>

					<table class="table">
					<thead>
						<tr>
							<th>Sing-box订阅链接：</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td class="limited-width">${l}</td>	
							<td><button class="btn btn-primary" onclick="copyToClipboard('${l}')">点击复制链接</button></td>
						</tr>
					</tbody>
				</table>
				<br>
				<br>
        </div>
    </div>
</div>
</body>
`}function gettyConfig(e,t){return""+btoa(`trojan://${e}@${IP1}:${PT1}?encryption=none&security=none&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T1_${IP1}_${PT1}
trojan://${e}@${IP2}:${PT2}?encryption=none&security=none&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T2_${IP2}_${PT2}
trojan://${e}@${IP3}:${PT3}?encryption=none&security=none&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T3_${IP3}_${PT3}
trojan://${e}@${IP4}:${PT4}?encryption=none&security=none&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T4_${IP4}_${PT4}
trojan://${e}@${IP5}:${PT5}?encryption=none&security=none&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T5_${IP5}_${PT5}
trojan://${e}@${IP6}:${PT6}?encryption=none&security=none&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T6_${IP6}_${PT6}
trojan://${e}@${IP7}:${PT7}?encryption=none&security=none&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T7_${IP7}_${PT7}
trojan://${e}@${IP8}:${PT8}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T8_${IP8}_${PT8}
trojan://${e}@${IP9}:${PT9}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T9_${IP9}_${PT9}
trojan://${e}@${IP10}:${PT10}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T10_${IP10}_${PT10}
trojan://${e}@${IP11}:${PT11}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T11_${IP11}_${PT11}
trojan://${e}@${IP12}:${PT12}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T12_${IP12}_${PT12}
trojan://${e}@${IP13}:${PT13}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T13_${IP13}_`+PT13)}function getclConfig(e,t){return`
port: 7890
allow-lan: true
mode: rule
log-level: info
unified-delay: true
global-client-fingerprint: chrome
dns:
  enable: true
  listen: :53
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  default-nameserver: 
    - 223.5.5.5
    - 114.114.114.114
    - 8.8.8.8
  nameserver:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query
  fallback:
    - https://1.0.0.1/dns-query
    - tls://dns.google
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4

proxies:
- name: CF_T8_${IP8}_${PT8}
  type: trojan
  server: ${IP8}
  port: ${PT8}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

- name: CF_T9_${IP9}_${PT9}
  type: trojan
  server: ${IP9}
  port: ${PT9}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

- name: CF_T10_${IP10}_${PT10}
  type: trojan
  server: ${IP10}
  port: ${PT10}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

- name: CF_T11_${IP11}_${PT11}
  type: trojan
  server: ${IP11}
  port: ${PT11}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

- name: CF_T12_${IP12}_${PT12}
  type: trojan
  server: ${IP12}
  port: ${PT12}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

- name: CF_T13_${IP13}_${PT13}
  type: trojan
  server: ${IP13}
  port: ${PT13}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

proxy-groups:
- name: 负载均衡
  type: load-balance
  url: http://www.gstatic.com/generate_204
  interval: 300
  proxies:
    - CF_T8_${IP8}_${PT8}
    - CF_T9_${IP9}_${PT9}
    - CF_T10_${IP10}_${PT10}
    - CF_T11_${IP11}_${PT11}
    - CF_T12_${IP12}_${PT12}
    - CF_T13_${IP13}_${PT13}

- name: 自动选择
  type: url-test
  url: http://www.gstatic.com/generate_204
  interval: 300
  tolerance: 50
  proxies:
    - CF_T8_${IP8}_${PT8}
    - CF_T9_${IP9}_${PT9}
    - CF_T10_${IP10}_${PT10}
    - CF_T11_${IP11}_${PT11}
    - CF_T12_${IP12}_${PT12}
    - CF_T13_${IP13}_${PT13}

- name: 🌍选择代理
  type: select
  proxies:
    - 负载均衡
    - 自动选择
    - DIRECT
    - CF_T8_${IP8}_${PT8}
    - CF_T9_${IP9}_${PT9}
    - CF_T10_${IP10}_${PT10}
    - CF_T11_${IP11}_${PT11}
    - CF_T12_${IP12}_${PT12}
    - CF_T13_${IP13}_${PT13}

rules:
  - GEOIP,LAN,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,🌍选择代理`}function getsbConfig(e,t){return`{
	  "log": {
		"disabled": false,
		"level": "info",
		"timestamp": true
	  },
	  "experimental": {
		"clash_api": {
		  "external_controller": "127.0.0.1:9090",
		  "external_ui": "ui",
		  "external_ui_download_url": "",
		  "external_ui_download_detour": "",
		  "secret": "",
		  "default_mode": "Rule"
		},
		"cache_file": {
		  "enabled": true,
		  "path": "cache.db",
		  "store_fakeip": true
		}
	  },
	  "dns": {
		"servers": [
		  {
			"tag": "proxydns",
			"address": "tls://8.8.8.8/dns-query",
			"detour": "select"
		  },
		  {
			"tag": "localdns",
			"address": "h3://223.5.5.5/dns-query",
			"detour": "direct"
		  },
		  {
			"address": "rcode://refused",
			"tag": "block"
		  },
		  {
			"tag": "dns_fakeip",
			"address": "fakeip"
		  }
		],
		"rules": [
		  {
			"outbound": "any",
			"server": "localdns",
			"disable_cache": true
		  },
		  {
			"clash_mode": "Global",
			"server": "proxydns"
		  },
		  {
			"clash_mode": "Direct",
			"server": "localdns"
		  },
		  {
			"rule_set": "geosite-cn",
			"server": "localdns"
		  },
		  {
			"rule_set": "geosite-geolocation-!cn",
			"server": "proxydns"
		  },
		  {
			"rule_set": "geosite-geolocation-!cn",
			"query_type": [
			  "A",
			  "AAAA"
			],
			"server": "dns_fakeip"
		  }
		],
		"fakeip": {
		  "enabled": true,
		  "inet4_range": "198.18.0.0/15",
		  "inet6_range": "fc00::/18"
		},
		"independent_cache": true,
		"final": "proxydns"
	  },
	  "inbounds": [
		{
		  "type": "tun",
		  "inet4_address": "172.19.0.1/30",
		  "inet6_address": "fd00::1/126",
		  "auto_route": true,
		  "strict_route": true,
		  "sniff": true,
		  "sniff_override_destination": true,
		  "domain_strategy": "prefer_ipv4"
		}
	  ],
	  "outbounds": [
      {
        "tag": "select",
        "type": "selector",
        "default": "auto",
        "outbounds": [
        "auto",
        "CF_T1_${IP1}_${PT1}",
        "CF_T2_${IP2}_${PT2}",
        "CF_T3_${IP3}_${PT3}",
        "CF_T4_${IP4}_${PT4}",
        "CF_T5_${IP5}_${PT5}",
        "CF_T6_${IP6}_${PT6}",
        "CF_T7_${IP7}_${PT7}",
        "CF_T8_${IP8}_${PT8}",
        "CF_T9_${IP9}_${PT9}",
        "CF_T10_${IP10}_${PT10}",
        "CF_T11_${IP11}_${PT11}",
        "CF_T12_${IP12}_${PT12}",
        "CF_T13_${IP13}_${PT13}"
        ]
      },
      {
        "server": "${IP1}",
        "server_port": ${PT1},
        "tag": "CF_T1_${IP1}_${PT1}",
        "transport": {
          "headers": {
            "Host": [
            "${t}"
            ]
          }, 
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {
        "server": "${IP2}",
        "server_port": ${PT2},
        "tag": "CF_T2_${IP2}_${PT2}",
        "transport": {
        "headers": {
          "Host": [
          "${t}"
          ]
        },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {
        "server": "${IP3}",
        "server_port": ${PT3},
        "tag": "CF_T3_${IP3}_${PT3}",
        "transport": {
        "headers": {
          "Host": [
          "${t}"
          ]
        },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {
        "server": "${IP4}",
        "server_port": ${PT4},
        "tag": "CF_T4_${IP4}_${PT4}",
        "transport": {
        "headers": {
          "Host": [
          "${t}"
          ]
        },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {
        "server": "${IP5}",
        "server_port": ${PT5},
        "tag": "CF_T5_${IP5}_${PT5}",
        "transport": {
        "headers": {
          "Host": [
          "${t}"
          ]
        },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {
        "server": "${IP6}",
        "server_port": ${PT6},
        "tag": "CF_T6_${IP6}_${PT6}",
        "transport": {
        "headers": {
          "Host": [
          "${t}"
          ]
        },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {
        "server": "${IP7}",
        "server_port": ${PT7},
        "tag": "CF_T7_${IP7}_${PT7}",
        "transport": {
        "headers": {
          "Host": [
          "${t}"
          ]
        },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {
        "server": "${IP8}",
        "server_port": ${PT8},
        "tag": "CF_T8_${IP8}_${PT8}",
        "tls": {
          "enabled": true,
          "server_name": "${t}",
          "insecure": false,
          "utls": {
            "enabled": true,
            "fingerprint": "chrome"
          }
          },
        "transport": {
          "headers": {
            "Host": [
            "${t}"
            ]
          },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {     
        "server": "${IP9}",
        "server_port": ${PT9},
        "tag": "CF_T9_${IP9}_${PT9}",
        "tls": {
        "enabled": true,
        "server_name": "${t}",
        "insecure": false,
        "utls": {
          "enabled": true,
          "fingerprint": "chrome"
        }
        },
        "transport": {
        "headers": {
          "Host": [
          "${t}"
          ]
        },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {     
        "server": "${IP10}",
        "server_port": ${PT10},
        "tag": "CF_T10_${IP10}_${PT10}",
        "tls": {
        "enabled": true,
        "server_name": "${t}",
        "insecure": false,
        "utls": {
          "enabled": true,
          "fingerprint": "chrome"
        }
        },
        "transport": {
        "headers": {
          "Host": [
          "${t}"
          ]
        },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {     
        "server": "${IP11}",
        "server_port": ${PT11},
        "tag": "CF_T11_${IP11}_${PT11}",
        "tls": {
        "enabled": true,
        "server_name": "${t}",
        "insecure": false,
        "utls": {
          "enabled": true,
          "fingerprint": "chrome"
        }
        },
        "transport": {
        "headers": {
          "Host": [
          "${t}"
          ]
        },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {
        "server": "${IP12}",
        "server_port": ${PT12},
        "tag": "CF_T12_${IP12}_${PT12}",
        "tls": {
        "enabled": true,
        "server_name": "${t}",
        "insecure": false,
        "utls": {
          "enabled": true,
          "fingerprint": "chrome"
        }
        },
        "transport": {
        "headers": {
          "Host": [
          "${t}"
          ]
        },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {     
        "server": "${IP13}",
        "server_port": ${PT13},
        "tag": "CF_T13_${IP13}_${PT13}",
        "tls": {
        "enabled": true,
        "server_name": "${t}",
        "insecure": false,
        "utls": {
          "enabled": true,
          "fingerprint": "chrome"
        }
        },
        "transport": {
        "headers": {
          "Host": [
          "${t}"
          ]
        },
        "path": "/?ed=2560",
        "type": "ws"
        },
        "type": "trojan",
        "password": "${e}"
      },
      {
        "tag": "direct",
        "type": "direct"
      },
      {
        "tag": "block",
        "type": "block"
      },
      {
        "tag": "dns-out",
        "type": "dns"
      },
      {
        "tag": "auto",
        "type": "urltest",
        "outbounds": [
        "CF_T1_${IP1}_${PT1}",
        "CF_T2_${IP2}_${PT2}",
        "CF_T3_${IP3}_${PT3}",
        "CF_T4_${IP4}_${PT4}",
        "CF_T5_${IP5}_${PT5}",
        "CF_T6_${IP6}_${PT6}",
        "CF_T7_${IP7}_${PT7}",
        "CF_T8_${IP8}_${PT8}",
        "CF_T9_${IP9}_${PT9}",
        "CF_T10_${IP10}_${PT10}",
        "CF_T11_${IP11}_${PT11}",
        "CF_T12_${IP12}_${PT12}",
        "CF_T13_${IP13}_${PT13}"
        ],
		  "url": "https://www.gstatic.com/generate_204",
		  "interval": "1m",
		  "tolerance": 50,
		  "interrupt_exist_connections": false
		}
	  ],
	  "route": {
		"rule_set": [
		  {
			"tag": "geosite-geolocation-!cn",
			"type": "remote",
			"format": "binary",
			"url": "https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/geolocation-!cn.srs",
			"download_detour": "select",
			"update_interval": "1d"
		  },
		  {
			"tag": "geosite-cn",
			"type": "remote",
			"format": "binary",
			"url": "https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/geolocation-cn.srs",
			"download_detour": "select",
			"update_interval": "1d"
		  },
		  {
			"tag": "geoip-cn",
			"type": "remote",
			"format": "binary",
			"url": "https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geoip/cn.srs",
			"download_detour": "select",
			"update_interval": "1d"
		  }
		],
		"auto_detect_interface": true,
		"final": "select",
		"rules": [
		  {
			"outbound": "dns-out",
			"protocol": "dns"
		  },
		  {
			"clash_mode": "Direct",
			"outbound": "direct"
		  },
		  {
			"clash_mode": "Global",
			"outbound": "select"
		  },
		  {
			"rule_set": "geoip-cn",
			"outbound": "direct"
		  },
		  {
			"rule_set": "geosite-cn",
			"outbound": "direct"
		  },
		  {
			"ip_is_private": true,
			"outbound": "direct"
		  },
		  {
			"rule_set": "geosite-geolocation-!cn",
			"outbound": "select"
		  }
		]
	  },
	  "ntp": {
		"enabled": true,
		"server": "time.apple.com",
		"server_port": 123,
		"interval": "30m",
		"detour": "direct"
	  }
	}`}function getptyConfig(e,t){return""+btoa(`trojan://${e}@${IP8}:${PT8}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T8_${IP8}_${PT8}
trojan://${e}@${IP9}:${PT9}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T9_${IP9}_${PT9}
trojan://${e}@${IP10}:${PT10}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T10_${IP10}_${PT10}
trojan://${e}@${IP11}:${PT11}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T11_${IP11}_${PT11}
trojan://${e}@${IP12}:${PT12}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T12_${IP12}_${PT12}
trojan://${e}@${IP13}:${PT13}?encryption=none&security=tls&sni=${t}&fp=randomized&type=ws&host=${t}&path=%2F%3Fed%3D2560#CF_T13_${IP13}_`+PT13)}function getpclConfig(e,t){return`
port: 7890
allow-lan: true
mode: rule
log-level: info
unified-delay: true
global-client-fingerprint: chrome
dns:
  enable: true
  listen: :53
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  default-nameserver: 
    - 223.5.5.5
    - 114.114.114.114
    - 8.8.8.8
  nameserver:
    - https://dns.alidns.com/dns-query
    - https://doh.pub/dns-query
  fallback:
    - https://1.0.0.1/dns-query
    - tls://dns.google
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4

proxies:
- name: CF_T8_${IP8}_${PT8}
  type: trojan
  server: ${IP8}
  port: ${PT8}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

- name: CF_T9_${IP9}_${PT9}
  type: trojan
  server: ${IP9}
  port: ${PT9}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

- name: CF_T10_${IP10}_${PT10}
  type: trojan
  server: ${IP10}
  port: ${PT10}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

- name: CF_T11_${IP11}_${PT11}
  type: trojan
  server: ${IP11}
  port: ${PT11}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

- name: CF_T12_${IP12}_${PT12}
  type: trojan
  server: ${IP12}
  port: ${PT12}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

- name: CF_T13_${IP13}_${PT13}
  type: trojan
  server: ${IP13}
  port: ${PT13}
  password: ${e}
  udp: false
  sni: ${t}
  network: ws
  ws-opts:
    path: "/?ed=2560"
    headers:
      Host: ${t}

proxy-groups:
- name: 负载均衡
  type: load-balance
  url: http://www.gstatic.com/generate_204
  interval: 300
  proxies:
    - CF_T8_${IP8}_${PT8}
    - CF_T9_${IP9}_${PT9}
    - CF_T10_${IP10}_${PT10}
    - CF_T11_${IP11}_${PT11}
    - CF_T12_${IP12}_${PT12}
    - CF_T13_${IP13}_${PT13}

- name: 自动选择
  type: url-test
  url: http://www.gstatic.com/generate_204
  interval: 300
  tolerance: 50
  proxies:
    - CF_T8_${IP8}_${PT8}
    - CF_T9_${IP9}_${PT9}
    - CF_T10_${IP10}_${PT10}
    - CF_T11_${IP11}_${PT11}
    - CF_T12_${IP12}_${PT12}
    - CF_T13_${IP13}_${PT13}

- name: 🌍选择代理
  type: select
  proxies:
    - 负载均衡
    - 自动选择
    - DIRECT
    - CF_T8_${IP8}_${PT8}
    - CF_T9_${IP9}_${PT9}
    - CF_T10_${IP10}_${PT10}
    - CF_T11_${IP11}_${PT11}
    - CF_T12_${IP12}_${PT12}
    - CF_T13_${IP13}_${PT13}

rules:
  - GEOIP,LAN,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,🌍选择代理`}function getpsbConfig(e,t){return`{
		  "log": {
			"disabled": false,
			"level": "info",
			"timestamp": true
		  },
		  "experimental": {
			"clash_api": {
			  "external_controller": "127.0.0.1:9090",
			  "external_ui": "ui",
			  "external_ui_download_url": "",
			  "external_ui_download_detour": "",
			  "secret": "",
			  "default_mode": "Rule"
			},
			"cache_file": {
			  "enabled": true,
			  "path": "cache.db",
			  "store_fakeip": true
			}
		  },
		  "dns": {
			"servers": [
			  {
				"tag": "proxydns",
				"address": "tls://8.8.8.8/dns-query",
				"detour": "select"
			  },
			  {
				"tag": "localdns",
				"address": "h3://223.5.5.5/dns-query",
				"detour": "direct"
			  },
			  {
				"address": "rcode://refused",
				"tag": "block"
			  },
			  {
				"tag": "dns_fakeip",
				"address": "fakeip"
			  }
			],
			"rules": [
			  {
				"outbound": "any",
				"server": "localdns",
				"disable_cache": true
			  },
			  {
				"clash_mode": "Global",
				"server": "proxydns"
			  },
			  {
				"clash_mode": "Direct",
				"server": "localdns"
			  },
			  {
				"rule_set": "geosite-cn",
				"server": "localdns"
			  },
			  {
				"rule_set": "geosite-geolocation-!cn",
				"server": "proxydns"
			  },
			  {
				"rule_set": "geosite-geolocation-!cn",
				"query_type": [
				  "A",
				  "AAAA"
				],
				"server": "dns_fakeip"
			  }
			],
			"fakeip": {
			  "enabled": true,
			  "inet4_range": "198.18.0.0/15",
			  "inet6_range": "fc00::/18"
			},
			"independent_cache": true,
			"final": "proxydns"
		  },
		  "inbounds": [
			{
			  "type": "tun",
			  "inet4_address": "172.19.0.1/30",
			  "inet6_address": "fd00::1/126",
			  "auto_route": true,
			  "strict_route": true,
			  "sniff": true,
			  "sniff_override_destination": true,
			  "domain_strategy": "prefer_ipv4"
			}
		  ],
		  "outbounds": [
        {
          "tag": "select",
          "type": "selector",
          "default": "auto",
          "outbounds": [
          "auto",
          "CF_T8_${IP8}_${PT8}",
          "CF_T9_${IP9}_${PT9}",
          "CF_T10_${IP10}_${PT10}",
          "CF_T11_${IP11}_${PT11}",
          "CF_T12_${IP12}_${PT12}",
          "CF_T13_${IP13}_${PT13}"
          ]
        },
        {
          "server": "${IP8}",
          "server_port": ${PT8},
          "tag": "CF_T8_${IP8}_${PT8}",        
          "tls": {
          "enabled": true,
          "server_name": "${t}",
          "insecure": false,
          "utls": {
            "enabled": true,
            "fingerprint": "chrome"
          }
          },
          "transport": {
          "headers": {
            "Host": [
            "${t}"
            ]
          },
          "path": "/?ed=2560",
          "type": "ws"
          },
          "type": "trojan",
          "password": "${e}"
        },
        {
          "server": "${IP9}",
          "server_port": ${PT9},
          "tag": "CF_T9_${IP9}_${PT9}", 
          "tls": {
          "enabled": true,
          "server_name": "${t}",
          "insecure": false,
          "utls": {
            "enabled": true,
            "fingerprint": "chrome"
          }
          },
          "transport": {
          "headers": {
            "Host": [
            "${t}"
            ]
          },
          "path": "/?ed=2560",
          "type": "ws"
          },
          "type": "trojan",
          "password": "${e}"
        },
        {
          "server": "${IP10}",
          "server_port": ${PT10},
          "tag": "CF_T10_${IP10}_${PT10}", 
          "tls": {
          "enabled": true,
          "server_name": "${t}",
          "insecure": false,
          "utls": {
            "enabled": true,
            "fingerprint": "chrome"
          }
          },
          "transport": {
          "headers": {
            "Host": [
            "${t}"
            ]
          },
          "path": "/?ed=2560",
          "type": "ws"
          },
          "type": "trojan",
          "password": "${e}"
        },
        {
          "server": "${IP11}",
          "server_port": ${PT11},
          "tag": "CF_T11_${IP11}_${PT11}",
          "tls": {
          "enabled": true,
          "server_name": "${t}",
          "insecure": false,
          "utls": {
            "enabled": true,
            "fingerprint": "chrome"
          }
          },
          "transport": {
          "headers": {
            "Host": [
            "${t}"
            ]
          },
          "path": "/?ed=2560",
          "type": "ws"
          },
          "type": "trojan",
          "password": "${e}"
        },
        {
          "server": "${IP12}",
          "server_port": ${PT12},
          "tag": "CF_T12_${IP12}_${PT12}",
          "tls": {
          "enabled": true,
          "server_name": "${t}",
          "insecure": false,
          "utls": {
            "enabled": true,
            "fingerprint": "chrome"
          }
          },
          "transport": {
          "headers": {
            "Host": [
            "${t}"
            ]
          },
          "path": "/?ed=2560",
          "type": "ws"
          },
          "type": "trojan",
          "password": "${e}"
        },
        {
          "server": "${IP13}",
          "server_port": ${PT13},
          "tag": "CF_T13_${IP13}_${PT13}",
          "tls": {
          "enabled": true,
          "server_name": "${t}",
          "insecure": false,
          "utls": {
            "enabled": true,
            "fingerprint": "chrome"
          }
          },
          "transport": {
          "headers": {
            "Host": [
            "${t}"
            ]
          },
          "path": "/?ed=2560",
          "type": "ws"
          },
          "type": "trojan",
          "password": "${e}"
        },
        {
          "tag": "direct",
          "type": "direct"
        },
        {
          "tag": "block",
          "type": "block"
        },
        {
          "tag": "dns-out",
          "type": "dns"
        },
        {
          "tag": "auto",
          "type": "urltest",
          "outbounds": [
          "CF_T8_${IP8}_${PT8}",
          "CF_T9_${IP9}_${PT9}",
          "CF_T10_${IP10}_${PT10}",
          "CF_T11_${IP11}_${PT11}",
          "CF_T12_${IP12}_${PT12}",
          "CF_T13_${IP13}_${PT13}"
          ],
			  "url": "https://www.gstatic.com/generate_204",
			  "interval": "1m",
			  "tolerance": 50,
			  "interrupt_exist_connections": false
			}
		  ],
		  "route": {
			"rule_set": [
			  {
				"tag": "geosite-geolocation-!cn",
				"type": "remote",
				"format": "binary",
				"url": "https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/geolocation-!cn.srs",
				"download_detour": "select",
				"update_interval": "1d"
			  },
			  {
				"tag": "geosite-cn",
				"type": "remote",
				"format": "binary",
				"url": "https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geosite/geolocation-cn.srs",
				"download_detour": "select",
				"update_interval": "1d"
			  },
			  {
				"tag": "geoip-cn",
				"type": "remote",
				"format": "binary",
				"url": "https://cdn.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@sing/geo/geoip/cn.srs",
				"download_detour": "select",
				"update_interval": "1d"
			  }
			],
			"auto_detect_interface": true,
			"final": "select",
			"rules": [
			  {
				"outbound": "dns-out",
				"protocol": "dns"
			  },
			  {
				"clash_mode": "Direct",
				"outbound": "direct"
			  },
			  {
				"clash_mode": "Global",
				"outbound": "select"
			  },
			  {
				"rule_set": "geoip-cn",
				"outbound": "direct"
			  },
			  {
				"rule_set": "geosite-cn",
				"outbound": "direct"
			  },
			  {
				"ip_is_private": true,
				"outbound": "direct"
			  },
			  {
				"rule_set": "geosite-geolocation-!cn",
				"outbound": "select"
			  }
			]
		  },
		  "ntp": {
			"enabled": true,
			"server": "time.apple.com",
			"server_port": 123,
			"interval": "30m",
			"detour": "direct"
		  }
		}`}(()=>{function a(t,r){return function(e){return new $(r,!0).update(e)[t]()}}function e(e){var t=a("hex",e);(t=i?((t,e)=>{var r,s=require("crypto"),a=require("buffer").Buffer,o=e?"sha224":"sha256";return r=a.from&&!n.JS_SHA256_NO_BUFFER_FROM?a.from:function(e){return new a(e)},function(e){if("string"==typeof e)return s.createHash(o).update(e,"utf8").digest("hex");if(null==e)throw new Error(c);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===a?s.createHash(o).update(r(e)).digest("hex"):t(e)}})(t,e):t).create=function(){return new $(e)},t.update=function(e){return t.create().update(e)};for(var r=0;r<h.length;++r){var s=h[r];t[s]=a(s,e)}return t}function o(r,s){return function(e,t){return new T(e,s,!0).update(t)[r]()}}function t(t){var r=o("hex",t);r.create=function(e){return new T(e,t)},r.update=function(e,t){return r.create(e).update(t)};for(var e=0;e<h.length;++e){var s=h[e];r[s]=o(s,t)}return r}var c="input is invalid type",n=(r="object"==typeof window)?window:{},r=!(r=n.JS_SHA256_NO_WINDOW?!1:r)&&"object"==typeof self,i=!n.JS_SHA256_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node,r=(i?n=global:r&&(n=self),!n.JS_SHA256_NO_COMMON_JS&&"object"==typeof module&&module.exports),s="function"==typeof define&&define.amd,u=!n.JS_SHA256_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,d="0123456789abcdef".split(""),l=[-2147483648,8388608,32768,128],p=[24,16,8,0],P=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],h=["hex","array","digest","arrayBuffer"],_=[];function $(e,t){t?(_[0]=_[16]=_[1]=_[2]=_[3]=_[4]=_[5]=_[6]=_[7]=_[8]=_[9]=_[10]=_[11]=_[12]=_[13]=_[14]=_[15]=0,this.blocks=_):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e}function T(e,t,r){var s=typeof e;if("string"==s){for(var a,o=[],n=e.length,i=0,d=0;d<n;++d)(a=e.charCodeAt(d))<128?o[i++]=a:(a<2048?o[i++]=192|a>>>6:(a<55296||57344<=a?o[i++]=224|a>>>12:(a=65536+((1023&a)<<10|1023&e.charCodeAt(++d)),o[i++]=240|a>>>18,o[i++]=128|a>>>12&63),o[i++]=128|a>>>6&63),o[i++]=128|63&a);e=o}else{if("object"!=s)throw new Error(c);if(null===e)throw new Error(c);if(u&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||u&&ArrayBuffer.isView(e)))throw new Error(c)}64<e.length&&(e=new $(t,!0).update(e).array());var l=[],p=[];for(d=0;d<64;++d){var h=e[d]||0;l[d]=92^h,p[d]=54^h}$.call(this,t,r),this.update(p),this.oKeyPad=l,this.inner=!0,this.sharedMemory=r}!n.JS_SHA256_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!u||!n.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer}),$.prototype.update=function(e){if(!this.finalized){var t,r=typeof e;if("string"!=r){if("object"!=r)throw new Error(c);if(null===e)throw new Error(c);if(u&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||u&&ArrayBuffer.isView(e)))throw new Error(c);t=!0}for(var s,a,o=0,n=e.length,i=this.blocks;o<n;){if(this.hashed&&(this.hashed=!1,i[0]=this.block,this.block=i[16]=i[1]=i[2]=i[3]=i[4]=i[5]=i[6]=i[7]=i[8]=i[9]=i[10]=i[11]=i[12]=i[13]=i[14]=i[15]=0),t)for(a=this.start;o<n&&a<64;++o)i[a>>>2]|=e[o]<<p[3&a++];else for(a=this.start;o<n&&a<64;++o)(s=e.charCodeAt(o))<128?i[a>>>2]|=s<<p[3&a++]:(s<2048?i[a>>>2]|=(192|s>>>6)<<p[3&a++]:(s<55296||57344<=s?i[a>>>2]|=(224|s>>>12)<<p[3&a++]:(s=65536+((1023&s)<<10|1023&e.charCodeAt(++o)),i[a>>>2]|=(240|s>>>18)<<p[3&a++],i[a>>>2]|=(128|s>>>12&63)<<p[3&a++]),i[a>>>2]|=(128|s>>>6&63)<<p[3&a++]),i[a>>>2]|=(128|63&s)<<p[3&a++]);this.lastByteIndex=a,this.bytes+=a-this.start,64<=a?(this.block=i[16],this.start=a-64,this.hash(),this.hashed=!0):this.start=a}return 4294967295<this.bytes&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},$.prototype.finalize=function(){var e,t;this.finalized||(this.finalized=!0,e=this.blocks,t=this.lastByteIndex,e[16]=this.block,e[t>>>2]|=l[3&t],this.block=e[16],56<=t&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash())},$.prototype.hash=function(){for(var e,t,r,s,a,o,n=this.h0,i=this.h1,d=this.h2,l=this.h3,p=this.h4,h=this.h5,c=this.h6,u=this.h7,_=this.blocks,$=16;$<64;++$)e=((t=_[$-15])>>>7|t<<25)^(t>>>18|t<<14)^t>>>3,t=_[$-2],_[$]=_[$-16]+e+_[$-7]+((t>>>17|t<<15)^(t>>>19|t<<13)^t>>>10)<<0;for(o=i&d,$=0;$<64;$+=4)this.first?(l=this.is224?(r=300032,u=(t=_[0]-1413257819)-150054599<<0,t+24177077<<0):(r=704751109,u=(t=_[0]-210244248)-1521486534<<0,t+143694565<<0),this.first=!1):(u=l+(t=u+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(p&h^~p&c)+P[$]+_[$])<<0,l=t+((e=(n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+((r=n&i)^n&d^o))<<0),c=d+(t=c+((u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(u&p^~u&h)+P[$+1]+_[$+1])<<0,d=t+((e=(l>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10))+((s=l&n)^l&i^r))<<0,h=i+(t=h+((c>>>6|c<<26)^(c>>>11|c<<21)^(c>>>25|c<<7))+(c&u^~c&p)+P[$+2]+_[$+2])<<0,i=t+((e=(d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+((a=d&l)^d&n^s))<<0,p=n+(t=p+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(h&c^~h&u)+P[$+3]+_[$+3])<<0,n=t+((e=(i>>>2|i<<30)^(i>>>13|i<<19)^(i>>>22|i<<10))+((o=i&d)^i&l^a))<<0,this.chromeBugWorkAround=!0;this.h0=this.h0+n<<0,this.h1=this.h1+i<<0,this.h2=this.h2+d<<0,this.h3=this.h3+l<<0,this.h4=this.h4+p<<0,this.h5=this.h5+h<<0,this.h6=this.h6+c<<0,this.h7=this.h7+u<<0},$.prototype.toString=$.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,s=this.h3,a=this.h4,o=this.h5,n=this.h6,i=this.h7,e=d[e>>>28&15]+d[e>>>24&15]+d[e>>>20&15]+d[e>>>16&15]+d[e>>>12&15]+d[e>>>8&15]+d[e>>>4&15]+d[15&e]+d[t>>>28&15]+d[t>>>24&15]+d[t>>>20&15]+d[t>>>16&15]+d[t>>>12&15]+d[t>>>8&15]+d[t>>>4&15]+d[15&t]+d[r>>>28&15]+d[r>>>24&15]+d[r>>>20&15]+d[r>>>16&15]+d[r>>>12&15]+d[r>>>8&15]+d[r>>>4&15]+d[15&r]+d[s>>>28&15]+d[s>>>24&15]+d[s>>>20&15]+d[s>>>16&15]+d[s>>>12&15]+d[s>>>8&15]+d[s>>>4&15]+d[15&s]+d[a>>>28&15]+d[a>>>24&15]+d[a>>>20&15]+d[a>>>16&15]+d[a>>>12&15]+d[a>>>8&15]+d[a>>>4&15]+d[15&a]+d[o>>>28&15]+d[o>>>24&15]+d[o>>>20&15]+d[o>>>16&15]+d[o>>>12&15]+d[o>>>8&15]+d[o>>>4&15]+d[15&o]+d[n>>>28&15]+d[n>>>24&15]+d[n>>>20&15]+d[n>>>16&15]+d[n>>>12&15]+d[n>>>8&15]+d[n>>>4&15]+d[15&n];return this.is224||(e+=d[i>>>28&15]+d[i>>>24&15]+d[i>>>20&15]+d[i>>>16&15]+d[i>>>12&15]+d[i>>>8&15]+d[i>>>4&15]+d[15&i]),e},$.prototype.array=$.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,r=this.h2,s=this.h3,a=this.h4,o=this.h5,n=this.h6,i=this.h7,e=[e>>>24&255,e>>>16&255,e>>>8&255,255&e,t>>>24&255,t>>>16&255,t>>>8&255,255&t,r>>>24&255,r>>>16&255,r>>>8&255,255&r,s>>>24&255,s>>>16&255,s>>>8&255,255&s,a>>>24&255,a>>>16&255,a>>>8&255,255&a,o>>>24&255,o>>>16&255,o>>>8&255,255&o,n>>>24&255,n>>>16&255,n>>>8&255,255&n];return this.is224||e.push(i>>>24&255,i>>>16&255,i>>>8&255,255&i),e},$.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),t=new DataView(e);return t.setUint32(0,this.h0),t.setUint32(4,this.h1),t.setUint32(8,this.h2),t.setUint32(12,this.h3),t.setUint32(16,this.h4),t.setUint32(20,this.h5),t.setUint32(24,this.h6),this.is224||t.setUint32(28,this.h7),e},(T.prototype=new $).finalize=function(){var e;$.prototype.finalize.call(this),this.inner&&(this.inner=!1,e=this.array(),$.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),$.prototype.finalize.call(this))};var y=e();(y.sha256=y).sha224=e(!0),y.sha256.hmac=t(),y.sha224.hmac=t(!0),r?module.exports=y:(n.sha256=y.sha256,n.sha224=y.sha224,s&&define(function(){return y}))})();export{worker_default as default};